name: Build

on: [push, pull_request]

jobs:
  # === Windows XP ===
  winxp:
    runs-on: windows-2019

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
          fetch-depth: 0

      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: 2.6

      - name: Build
        shell: cmd
        run: |
          COPY /Y build\janet\janetconf.h vendor\janet\src\conf\janetconf.h
          cd build
          cmake -G "Visual Studio 16 2019" -A x64 -T v141_xp -DCMAKE_BUILD_TYPE=Release -DBUILD_IPO=ON -DBUILD_WITH_ALL=ON -DBUILD_SDL=ON -DCMAKE_POLICY_VERSION_MINIMUM=3.5 ..
          cmake --build . --parallel

      - name: Deploy
        uses: actions/upload-artifact@v4
        with:
          name: "tic80-winxp"
          path: |
            build/bin/tic80.exe
            build/bin/*.dll

      - name: Build Pro
        shell: cmd
        run: |
          COPY /Y build\janet\janetconf.h vendor\janet\src\conf\janetconf.h
          cd build
          cmake -G "Visual Studio 16 2019" -A x64 -T v141_xp -DCMAKE_BUILD_TYPE=Release -DBUILD_IPO=ON -DBUILD_PRO=ON -DBUILD_WITH_ALL=ON  -DBUILD_SDL=ON ..
          cmake --build . --parallel

  # === Windows ===
  windows:
    runs-on: windows-2019

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
          fetch-depth: 0

      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: 2.6

      - name: Build
        shell: cmd
        run: |
          cd build
          cmake -G "Visual Studio 16 2019" -DCMAKE_BUILD_TYPE=Release -DBUILD_IPO=ON -DBUILD_WITH_ALL=ON -DCMAKE_POLICY_VERSION_MINIMUM=3.5 ..
          cmake --build . --parallel

      - name: Deploy
        uses: actions/upload-artifact@v4
        with:
          name: "tic80-windows"
          path: |
            build/bin/tic80.exe
            build/bin/*.dll

      - name: Build Pro
        shell: cmd
        run: |
          cd build
          cmake -G "Visual Studio 16 2019" -DCMAKE_BUILD_TYPE=Release -DBUILD_IPO=ON -DBUILD_PRO=ON -DBUILD_WITH_ALL=ON ..
          cmake --build . --parallel

  # === Windows MinGW-64 ===
  windows-mingw:
    runs-on: windows-latest
    defaults:
      run:
        shell: msys2 {0}

    steps:
      - name: Setup Mingw
        uses: msys2/setup-msys2@v2
        with:
          msystem: UCRT64
          update: true
          install: >-
            base-devel
            git
            gcc

      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: 2.6

      - uses: actions/checkout@v4
        with:
          submodules: recursive
          fetch-depth: 0

      - name: Build
        shell: bash
        run: |
          cd build
          cmake -G "MSYS Makefiles" -DCMAKE_BUILD_TYPE=Release -DBUILD_IPO=ON -DBUILD_WITH_ALL=ON ..
          cmake --build . --parallel

  # === Ubuntu ===
  linux-gcc12:
    runs-on: ubuntu-22.04

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
          fetch-depth: 0

      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: 2.6

      - name: Install
        run: |
          sudo apt-get update
          sudo apt-get install gcc-12 g++-12 libxi-dev libxcursor-dev libasound2-dev libgl-dev -y
          sudo ln -s -f /usr/bin/gcc-12 /usr/bin/gcc
          sudo ln -s -f /usr/bin/g++-12 /usr/bin/g++
          
      - name: Build
        run: |
          cd build
          cmake -DCMAKE_BUILD_TYPE=Release -DBUILD_IPO=ON -DBUILD_WITH_ALL=ON ..
          cmake --build . --parallel

      - name: Deploy
        uses: actions/upload-artifact@v4
        with:
          name: "tic80-linux-gcc12"
          path: |
            build/bin/tic80
            build/bin/*.so

      - name: Build Pro
        run: |
          cd build
          cmake -DCMAKE_BUILD_TYPE=Release -DBUILD_IPO=ON -DBUILD_PRO=ON -DBUILD_WITH_ALL=ON ..
          cmake --build . --parallel

  # === Ubuntu-arm64 ===
  linux-arm:
    runs-on: ubuntu-22.04-arm

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
          fetch-depth: 0

      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: 2.6

      - name: Install
        run: |
          sudo apt-get update
          sudo apt-get install gcc-12 g++-12 libxi-dev libxcursor-dev libasound2-dev libgl-dev -y
          sudo ln -s -f /usr/bin/gcc-12 /usr/bin/gcc
          sudo ln -s -f /usr/bin/g++-12 /usr/bin/g++
          
      - name: Build
        run: |
          cd build
          cmake -DCMAKE_BUILD_TYPE=Release -DBUILD_IPO=ON -DBUILD_WITH_ALL=ON ..
          cmake --build . --parallel

      - name: Deploy
        uses: actions/upload-artifact@v4
        with:
          name: "tic80-linux-arm"
          path: |
            build/bin/tic80
            build/bin/*.so

      - name: Build Pro
        run: |
          cd build
          cmake -DCMAKE_BUILD_TYPE=Release -DBUILD_IPO=ON -DBUILD_PRO=ON -DBUILD_WITH_ALL=ON ..
          cmake --build . --parallel

  # === Ubuntu gcc14 ===
  linux-gcc14:
    runs-on: ubuntu-24.04

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
          fetch-depth: 0

      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: 2.6

      - name: Install
        run: |
          sudo add-apt-repository ppa:ubuntu-toolchain-r/ppa
          sudo apt update
          sudo apt-get install gcc-14 g++-14 libxi-dev libxcursor-dev libasound2-dev libgl-dev -y
          sudo ln -s -f /usr/bin/gcc-14 /usr/bin/gcc
          sudo ln -s -f /usr/bin/g++-14 /usr/bin/g++
          
      - name: Build
        run: |
          cd build
          cmake -DCMAKE_BUILD_TYPE=Release -DBUILD_IPO=ON -DBUILD_WITH_ALL=ON ..
          cmake --build . --parallel

      - name: Deploy
        uses: actions/upload-artifact@v4
        with:
          name: "tic80-linux-gcc14"
          path: |
            build/bin/tic80
            build/bin/*.so

      - name: Build Pro
        run: |
          cd build
          cmake -DCMAKE_BUILD_TYPE=Release -DBUILD_IPO=ON -DBUILD_PRO=ON -DBUILD_WITH_ALL=ON ..
          cmake --build . --parallel

  # === Nintendo 3DS build ===
  nintendo-3ds:
    runs-on: ubuntu-latest
    container: devkitpro/devkitarm:latest

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
          fetch-depth: 0

      - name: Install Host toolchain
        run: |
          apt-get update
          apt-get install --assume-yes build-essential ruby-full

      - name: Build
        run: |
          cmake -B build -S . -DCMAKE_TOOLCHAIN_FILE=$DEVKITPRO/cmake/3DS.cmake -DCMAKE_BUILD_TYPE=Release -DBUILD_IPO=ON -DBUILD_WITH_ALL=ON -DBUILD_WITH_SCHEME=OFF -DBUILD_WITH_JS=OFF -DBUILD_WITH_PYTHON=OFF ..
          cmake --build build --parallel

      - name: Deploy
        uses: actions/upload-artifact@v4
        with:
          name: "tic80-nintendo-3ds"
          path: build/bin/tic80.3dsx

  # === MacOS 13 ===
  macos:
    runs-on: macos-13

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
          fetch-depth: 0

      - name: Install
        run: brew uninstall --ignore-dependencies libidn2

      - name: Build
        run: |
          cd build
          cmake -DCMAKE_BUILD_TYPE=Release -DBUILD_IPO=ON -DBUILD_WITH_ALL=ON ..
          cmake --build . --parallel

      - name: Deploy
        uses: actions/upload-artifact@v4
        with:
          name: "tic80-macos"
          path: |
            build/bin/tic80
            build/bin/*.dylib

      - name: Build Pro
        run: |
          cd build
          cmake -DCMAKE_BUILD_TYPE=Release -DBUILD_IPO=ON -DBUILD_PRO=ON -DBUILD_WITH_ALL=ON ..
          cmake --build . --parallel

  # === MacOS 14 / arm64 ===
  macos-arm:
    runs-on: macos-14

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
          fetch-depth: 0

      - name: Install
        run: brew uninstall --ignore-dependencies libidn2

      - name: Build
        run: |
          cd build
          cmake -DCMAKE_BUILD_TYPE=Release -DBUILD_IPO=ON -DBUILD_WITH_ALL=ON ..
          cmake --build . --parallel

      - name: Deploy
        uses: actions/upload-artifact@v4
        with:
          name: "tic80-macos-arm"
          path: |
            build/bin/tic80

      - name: Build
        run: |
          cd build
          cmake -DCMAKE_BUILD_TYPE=Release -DBUILD_IPO=ON -DBUILD_PRO=ON -DBUILD_WITH_ALL=ON ..
          cmake --build . --parallel

  # === Webapp ===
  webapp:
    runs-on: ubuntu-latest

    steps:
      - uses: mymindstorm/setup-emsdk@v14

      - uses: actions/checkout@v4
        with:
          submodules: recursive
          fetch-depth: 0

      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: 2.6

      - name: Build all
        run: |
          cd build
          emcmake cmake -DCMAKE_BUILD_TYPE=Release -DBUILD_IPO=ON -DBUILD_WITH_ALL=ON ..
          cmake --build . --parallel
          cp webapp/* bin

      - name: Deploy
        uses: actions/upload-artifact@v4
        with:
          name: "tic80-webapp"
          path: |
            build/bin/*

  # === Android ===
  android:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
          fetch-depth: 0

      - uses: nttld/setup-ndk@v1
        id: setup-ndk
        with:
          ndk-version: r22b
          add-to-path: true

      - name: Install Ninja
        run: sudo apt-get install ninja-build

      - name: Build
        run: |
          cd build
          cmake -G Ninja \
            -DCMAKE_BUILD_TYPE=Release -DBUILD_IPO=ON \
            -DBUILD_WITH_ALL=ON \
            -DBUILD_WITH_RUBY=OFF \
            -DCMAKE_TOOLCHAIN_FILE=$ANDROID_NDK_HOME/build/cmake/android.toolchain.cmake \
            -DANDROID_ABI=arm64-v8a \
            -DANDROID_PLATFORM=android-28 ..
          cmake --build . --parallel

      - name: Deploy
        uses: actions/upload-artifact@v4
        with:
          name: "tic80-android"
          path: build/bin/tic80.so
